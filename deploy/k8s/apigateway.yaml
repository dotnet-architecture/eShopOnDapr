apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-cm
  namespace: eshop
data:
  envoy.yaml: >
    admin:
      access_log_path: "/dev/null"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8001
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 80
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            config:
              codec_type: auto
              stat_prefix: ingress_http
              route_config:
                name: eshop_backend_route
                virtual_hosts:
                - name: eshop_backend
                  domains:
                  - "*"
                  cors:
                    allow_origin_string_match:
                    - safe_regex:
                        google_re2: {}
                        regex: \*
                    allow_methods: "GET, POST, PUT"
                    allow_headers: "authorization, content-type, x-requestid, x-requested-with"
                    allow_credentials: true
                  routes:
                  - name: "pics"
                    match:
                      safe_regex:
                        google_re2: {}
                        regex: "\/c\/api\/v1\/catalog\/items\/(\\d+)\/pic\/"
                    route:
                      auto_host_rewrite: true
                      regex_rewrite:
                        pattern:
                          google_re2: {}
                          regex: "\/c\/api\/v1\/catalog\/items\/(\\d+)\/pic\/"
                        substitution: "/catalog-api/api/v1/catalog/items/\\1/pic/"
                      cluster: catalog
                  - name: "c-short"
                    match:
                      prefix: "/c/"
                    route:
                      auto_host_rewrite: true
                      prefix_rewrite: "/v1.0/invoke/catalog-api/method/"
                      cluster: dapr
                  - name: "c-long"
                    match:
                      prefix: "/catalog-api/"
                    route:
                      auto_host_rewrite: true
                      prefix_rewrite: "/v1.0/invoke/catalog-api/method/"
                      cluster: dapr
                  - name: "o-short"
                    match:
                      prefix: "/o/"
                    route:
                      auto_host_rewrite: true
                      prefix_rewrite: "/v1.0/invoke/ordering-api/method/"
                      cluster: dapr
                  - name: "o-long"
                    match:
                      prefix: "/ordering-api/"
                    route:
                      auto_host_rewrite: true
                      prefix_rewrite: "/v1.0/invoke/ordering-api/method/"
                      cluster: dapr
                  - name: "h-long"
                    match:
                      prefix: "/hub/notificationhub"
                    route:
                      auto_host_rewrite: true
                      cluster: ordering-api
                      timeout: 300s
                  - name: "b-short"
                    match:
                      prefix: "/b/"
                    route:
                      auto_host_rewrite: true
                      prefix_rewrite: "/v1.0/invoke/basket-api/method/"
                      cluster: dapr
                  - name: "b-long"
                    match:
                      prefix: "/basket-api/"
                    route:
                      auto_host_rewrite: true
                      prefix_rewrite: "/v1.0/invoke/basket-api/method/"
                      cluster: dapr
                  - name: "agg"
                    match:
                      prefix: "/"
                    route:
                      auto_host_rewrite: true
                      prefix_rewrite: "/v1.0/invoke/webshoppingagg/method/"
                      cluster: dapr
              http_filters:
              - name: envoy.cors
              - name: envoy.router
              access_log:
              - name: envoy.file_access_log
                filter:
                  not_health_check_filter: {}
                config:
                  json_format:
                    time: "%START_TIME%"
                    protocol: "%PROTOCOL%"
                    duration: "%DURATION%"
                    request_method: "%REQ(:METHOD)%"
                    request_host: "%REQ(HOST)%"
                    path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                    response_flags: "%RESPONSE_FLAGS%"
                    route_name: "%ROUTE_NAME%"
                    upstream_host: "%UPSTREAM_HOST%"
                    upstream_cluster: "%UPSTREAM_CLUSTER%"
                    upstream_local_address: "%UPSTREAM_LOCAL_ADDRESS%"
                  path: "/tmp/access.log"
      clusters:
      - name: dapr
        connect_timeout: 0.25s
        type: strict_dns
        lb_policy: round_robin
        hosts:
        - socket_address:
            address: 127.0.0.1
            port_value: 3500
      - name: catalog
        connect_timeout: 0.25s
        type: strict_dns
        lb_policy: round_robin
        hosts:
        - socket_address:
            address: catalog-api
            port_value: 80
      - name: ordering-api
        connect_timeout: 0.25s
        type: strict_dns
        lb_policy: round_robin
        hosts:
        - socket_address:
            address: ordering-api
            port_value: 80

---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: apigateway
  namespace: eshop
  labels:
    app: eshop
    service: apigateway
spec:
  replicas: 1
  selector:
    matchLabels:
      service: apigateway
  template:
    metadata:
      labels:
        app: eshop
        service: apigateway
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "apigateway"
        dapr.io/app-port: "80"
        dapr.io/config: "dapr-config"
    spec:
      containers:
      - name: apigateway
        image: envoyproxy/envoy:v1.14.2
        imagePullPolicy: IfNotPresent
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
          - name: admin
            containerPort: 8001
            protocol: TCP
          - name: daprhttp
            containerPort: 3500
            protocol: TCP
          - name: daprgrpc
            containerPort: 50001
            protocol: TCP
        volumeMounts:
        - name: envoy-config
          mountPath: /etc/envoy/envoy.yaml
          subPath: envoy.yaml
      volumes:
      - name: envoy-config
        configMap:
          name: envoy-cm
---

kind: Service
apiVersion: v1
metadata:
  name: apigateway
  namespace: eshop
  labels:
    app: eshop
    service: apigateway
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30050
      protocol: TCP
      name: http
    - port: 8001
      targetPort: 8001
      nodePort: 30051
      protocol: TCP
      name: admin
    - port: 3500
      targetPort: 3500
      nodePort: 30052
      protocol: TCP
      name: daprhttp
    - port: 50001
      targetPort: 50001
      nodePort: 30053
      protocol: TCP
      name: daprgrpc
  selector:
    service: apigateway
